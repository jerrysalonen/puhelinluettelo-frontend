{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\salon\\\\Documents\\\\GitHub\\\\HYFullStack\\\\osa2\\\\puhelinluettelo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\salon\\\\Documents\\\\GitHub\\\\HYFullStack\\\\osa2\\\\puhelinluettelo\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Search from './components/Search';\nimport Add from './components/Add';\nimport List from './components/List';\nimport contactHandler from './services/contactHandler';\nimport Notification from './components/Notification';\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      persons = _useState2[0],\n      setPersons = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newName = _useState4[0],\n      setNewName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newNumber = _useState6[0],\n      setNewNumber = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      nameSearch = _useState8[0],\n      setNameSearch = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showContacts = _useState10[0],\n      setShowContacts = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      notificationMsg = _useState12[0],\n      setNotificationMsg = _useState12[1];\n\n  useEffect(function () {\n    console.log('effect');\n    contactHandler.readAll().then(function (tempPersons) {\n      setPersons(tempPersons);\n      setShowContacts(tempPersons);\n    });\n  }, []);\n\n  var nameListener = function nameListener(event) {\n    setNewName(event.target.value);\n  };\n\n  var numberListener = function numberListener(event) {\n    setNewNumber(event.target.value);\n  };\n\n  var nameSearchListener = function nameSearchListener(event) {\n    setNameSearch(event.target.value);\n    filter(event.target.value);\n  };\n\n  var filter = function filter(filterText) {\n    var filterPersons = persons;\n    filterPersons = filterPersons.filter(function (person) {\n      var personName = person.name.toLowerCase();\n      return personName.indexOf(filterText.toLowerCase()) !== -1;\n    });\n\n    if (filterPersons.length === persons.length) {\n      setShowContacts(persons);\n    } else {\n      setShowContacts(filterPersons);\n    }\n  };\n\n  var update = function update(id, person) {\n    contactHandler.updateNum(id, person);\n  };\n\n  var addContact = function addContact(event) {\n    event.preventDefault();\n    var nameExists = false;\n    var tempPerson;\n    persons.forEach(function (contactTemp) {\n      if (contactTemp.name === newName) {\n        nameExists = true;\n        tempPerson = contactTemp;\n      }\n    });\n\n    if (!nameExists) {\n      var newContact = {\n        name: newName,\n        number: newNumber\n      };\n      setPersons(persons.concat(newContact));\n      contactHandler.addContact(newContact);\n      setNotificationMsg(\"Kontakti '\".concat(newContact.name, \"' lis\\xE4tty\"));\n      setTimeout(function () {\n        setNotificationMsg(null);\n      }, 5000);\n      setNewName('');\n      setNewNumber('');\n      contactHandler.readAll().then(function (tempPersons) {\n        setPersons(tempPersons);\n        setShowContacts(tempPersons);\n      });\n    } else {\n      var confirm = window.confirm(\"\".concat(newName, \" on jo luettelossa, korvataanko vanha numero uudella?\"));\n\n      if (confirm) {\n        var _newContact = {\n          name: newName,\n          number: newNumber\n        };\n        var id = tempPerson.id;\n        update(id, _newContact);\n        setNewName('');\n        setNewNumber('');\n        contactHandler.readAll().then(function (tempPersons) {\n          setPersons(tempPersons);\n          setShowContacts(tempPersons);\n        });\n      }\n    }\n  };\n\n  var deleteContact = function deleteContact(person) {\n    var confirm = window.confirm(\"Poistetaanko \".concat(person.name, \"?\"));\n\n    if (confirm) {\n      contactHandler.deleteContact(person);\n      contactHandler.readAll().then(function (tempPersons) {\n        setPersons(tempPersons);\n        setShowContacts(tempPersons);\n      });\n    }\n  };\n\n  var mapNames = function mapNames() {\n    return showContacts.map(function (person) {\n      return React.createElement(\"div\", {\n        key: person.name + \"_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        key: person.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, person.name, \" \", person.number), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return deleteContact(person);\n        },\n        className: \"btn btn-primary\",\n        key: person.name + \"_btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Poista\"));\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"display-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Puhelinluettelo\"), React.createElement(Notification, {\n    message: notificationMsg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(Search, {\n    value: nameSearch,\n    onChange: nameSearchListener,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), React.createElement(Add, {\n    valueName: newName,\n    valueNumber: newNumber,\n    onChangeName: nameListener,\n    onChangeNumber: numberListener,\n    onClick: addContact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(List, {\n    mapNames: mapNames(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\salon\\Documents\\GitHub\\HYFullStack\\osa2\\puhelinluettelo\\src\\App.js"],"names":["React","useState","useEffect","Search","Add","List","contactHandler","Notification","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","nameSearch","setNameSearch","showContacts","setShowContacts","notificationMsg","setNotificationMsg","console","log","readAll","then","tempPersons","nameListener","event","target","value","numberListener","nameSearchListener","filter","filterText","filterPersons","person","personName","name","toLowerCase","indexOf","length","update","id","updateNum","addContact","preventDefault","nameExists","tempPerson","forEach","contactTemp","newContact","number","concat","setTimeout","confirm","window","deleteContact","mapNames","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Search from './components/Search'\nimport Add from './components/Add'\nimport List from './components/List'\nimport contactHandler from './services/contactHandler'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [nameSearch, setNameSearch] = useState('')\n  const [showContacts, setShowContacts] = useState([])\n  const [notificationMsg, setNotificationMsg] = useState(null)\n\n  useEffect(() => {\n    console.log('effect')\n    contactHandler.readAll()\n      .then(tempPersons => {\n        setPersons(tempPersons)\n        setShowContacts(tempPersons)\n      })\n  }, [])\n\n  const nameListener = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const numberListener = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const nameSearchListener = (event) => {\n    setNameSearch(event.target.value)\n    filter(event.target.value)\n  }\n\n  const filter = (filterText) => {\n    let filterPersons = persons\n    filterPersons = filterPersons.filter((person) => {\n      let personName = person.name.toLowerCase()\n      return personName.indexOf(\n        filterText.toLowerCase()) !== -1\n    })\n    if (filterPersons.length === persons.length) {\n      setShowContacts(persons)\n    } else {\n      setShowContacts(filterPersons)\n    }\n  }\n\n  const update = (id, person) => {\n    contactHandler.updateNum(id, person)\n  }\n\n  const addContact = (event) => {\n    event.preventDefault()\n    let nameExists = false\n    let tempPerson\n\n    persons.forEach((contactTemp) => {\n      if (contactTemp.name === newName) {\n        nameExists = true\n        tempPerson = contactTemp\n      }\n    })\n\n    if (!nameExists) {\n      const newContact = {\n        name: newName,\n        number: newNumber\n      }\n      setPersons(persons.concat(newContact))\n      contactHandler.addContact(newContact)\n\n      setNotificationMsg(`Kontakti '${newContact.name}' lisätty`)\n      setTimeout(() => { \n        setNotificationMsg(null) \n      }, 5000)\n\n\n      setNewName('')\n      setNewNumber('')\n\n      contactHandler.readAll()\n        .then(tempPersons => {\n          setPersons(tempPersons)\n          setShowContacts(tempPersons)\n        })\n    } else {\n      let confirm = window.confirm(`${newName} on jo luettelossa, korvataanko vanha numero uudella?`)\n      if (confirm) {\n        const newContact = {\n          name: newName,\n          number: newNumber\n        }\n        let id = tempPerson.id\n        update(id, newContact)\n        setNewName('')\n        setNewNumber('')\n\n        contactHandler.readAll()\n          .then(tempPersons => {\n            setPersons(tempPersons)\n            setShowContacts(tempPersons)\n          })\n      }\n    }\n  }\n\n  const deleteContact = (person) => {\n    let confirm = window.confirm(`Poistetaanko ${person.name}?`)\n    if (confirm) {\n      contactHandler.deleteContact(person)\n      contactHandler.readAll()\n        .then(tempPersons => {\n          setPersons(tempPersons)\n          setShowContacts(tempPersons)\n        })\n    }\n  }\n\n  const mapNames = () => showContacts.map(person =>\n    <div key={person.name + \"_div\"}>\n      <p key={person.name}>{person.name} {person.number}</p>\n      <button onClick={() => deleteContact(person)} className=\"btn btn-primary\" key={person.name + \"_btn\"}>Poista</button>\n    </div>\n  )\n\n  return (\n    <div className=\"container\">\n\n      <h2 className=\"display-3\">Puhelinluettelo</h2>\n\n      <Notification message={notificationMsg} />\n\n      <Search value={nameSearch} onChange={nameSearchListener} />\n\n      <Add valueName={newName}\n        valueNumber={newNumber}\n        onChangeName={nameListener}\n        onChangeNumber={numberListener}\n        onClick={addContact}\n      />\n\n      <List mapNames={mapNames()} />\n\n    </div>\n  )\n\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}